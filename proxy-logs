# User Web Proxy DataModel Search

Pipe the summary data from every user proxy event from your security logs into a risk index with an equal score of "1". You can always adjust the score dynamically using eval statements like deomnstrated in the search as a starting suggestion.

You will need to identify the user proxy sourcetypes in your env for the first line of the search. 

## Search String

| tstats count from datamodel=Web.Web where sourcetype IN ("<proxy-sourcetype-name>") by Web.user,Web.src,Web.dest,Web.category,Web.http_method,Web.http_user_agent,Web.status,Web.action,sourcetype,index
| `drop_dm_object_name("Web")`
| eval risk_score=case(match(category,"malware"), "20",match(category, "malicious"), "20", match(category,"cross"), "20", match(category,"ransom"), "100", 1==1, "1")
| eval risk_object='user'
| eval risk_object_type="user"
| eval savedsearch_description="user web behavior"
| rename index as orig_index sourcetype as orig_sourcetype
| table user,src,dest,category,action,status,http_method,http_user_agent,orig_sourcetype,orig_index,risk_*,savedsearch_description
| collect index=risk

## Schedule
Scheduled(never real time)

cron
0,30,*,*,*,*

duration
earliest: -34m@m, latest: -4m@m

### Schedule reasoning
this puts the schedule on a regular but limited window to help with performance while capturing every event.

## Throttling
user,src,dest,category,action,status,http_method,http_user_agent,sourcetype,index for 35 minutes

### Throttling reasoining
remove the duplicates completely
